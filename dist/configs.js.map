{"version":3,"sources":["../src/configs.js"],"names":["namedColors","defaultFontFamilies","name","family","getHexColor","color","replace","test","indexOf","rgbArray","split","convertedColor","length","map","hex","parseInt","x","toString","join","blocks","blockTypes","Object","keys","blockNames","key","convertAtomicBlock","block","contentState","contentBlock","getBlockForKey","entityKey","getEntityAt","entity","getEntity","mediaType","getType","toLowerCase","data","float","alignment","getData","url","link","link_target","width","height","meta","imageWrapStyle","styledClassName","textAlign","display","__html","styleToHTML","props","style","textDecoration","backgroundColor","fontSize","lineHeight","letterSpacing","paddingLeft","paddingRight","fontFamily","fontFamilies","find","item","blockToHTML","result","blockStyle","blockType","type","previousBlock","getBlockBefore","nextBlock","getBlockAfter","previousBlockType","nextBlockType","start","end","nest","entityToHTML","originalText","entityType","href","target","htmlToStyle","nodeName","node","currentStyle","newStyle","i","add","toUpperCase","isNaN","htmlToEntity","createEntity","alt","title","id","controls","autoplay","loop","poster","autoPlay","querySelectorAll","src","parentNode","entityData","classList","contains","embedContent","innerHTML","outerHTML","htmlToBlock","nodeStyle","getToHTMLConfig","getFromHTMLConfig"],"mappings":";;;;;;;;;AAAA;;;;;;AAEA,IAAMA,cAAc;AAClB,eAAa,SADK;AAElB,kBAAgB,SAFE;AAGlB,UAAQ,SAHU;AAIlB,gBAAc,SAJI;AAKlB,WAAS,SALS;AAMlB,WAAS,SANS;AAOlB,YAAU,SAPQ;AAQlB,WAAS,SARS;AASlB,oBAAkB,SATA;AAUlB,UAAQ,SAVU;AAWlB,gBAAc,SAXI;AAYlB,WAAS,SAZS;AAalB,eAAa,SAbK;AAclB,eAAa,SAdK;AAelB,gBAAc,SAfI;AAgBlB,eAAa,SAhBK;AAiBlB,WAAS,SAjBS;AAkBlB,oBAAkB,SAlBA;AAmBlB,cAAY,SAnBM;AAoBlB,aAAW,SApBO;AAqBlB,UAAQ,SArBU;AAsBlB,cAAY,SAtBM;AAuBlB,cAAY,SAvBM;AAwBlB,mBAAiB,SAxBC;AAyBlB,cAAY,SAzBM;AA0BlB,eAAa,SA1BK;AA2BlB,eAAa,SA3BK;AA4BlB,iBAAe,SA5BG;AA6BlB,oBAAkB,SA7BA;AA8BlB,gBAAc,SA9BI;AA+BlB,gBAAc,SA/BI;AAgClB,aAAW,SAhCO;AAiClB,gBAAc,SAjCI;AAkClB,kBAAgB,SAlCE;AAmClB,mBAAiB,SAnCC;AAoClB,mBAAiB,SApCC;AAqClB,mBAAiB,SArCC;AAsClB,gBAAc,SAtCI;AAuClB,cAAY,SAvCM;AAwClB,iBAAe,SAxCG;AAyClB,aAAW,SAzCO;AA0ClB,gBAAc,SA1CI;AA2ClB,eAAa,SA3CK;AA4ClB,iBAAe,SA5CG;AA6ClB,iBAAe,SA7CG;AA8ClB,aAAW,SA9CO;AA+ClB,eAAa,SA/CK;AAgDlB,gBAAc,SAhDI;AAiDlB,UAAQ,SAjDU;AAkDlB,eAAa,SAlDK;AAmDlB,UAAQ,SAnDU;AAoDlB,WAAS,SApDS;AAqDlB,iBAAe,SArDG;AAsDlB,cAAY,SAtDM;AAuDlB,aAAW,SAvDO;AAwDlB,gBAAc,SAxDI;AAyDlB,YAAU,SAzDQ;AA0DlB,WAAS,SA1DS;AA2DlB,WAAS,SA3DS;AA4DlB,cAAY,SA5DM;AA6DlB,mBAAiB,SA7DC;AA8DlB,eAAa,SA9DK;AA+DlB,kBAAgB,SA/DE;AAgElB,eAAa,SAhEK;AAiElB,gBAAc,SAjEI;AAkElB,eAAa,SAlEK;AAmElB,0BAAwB,SAnEN;AAoElB,eAAa,SApEK;AAqElB,gBAAc,SArEI;AAsElB,eAAa,SAtEK;AAuElB,iBAAe,SAvEG;AAwElB,mBAAiB,SAxEC;AAyElB,kBAAgB,SAzEE;AA0ElB,oBAAkB,SA1EA;AA2ElB,oBAAkB,SA3EA;AA4ElB,iBAAe,SA5EG;AA6ElB,UAAQ,SA7EU;AA8ElB,eAAa,SA9EK;AA+ElB,WAAS,SA/ES;AAgFlB,aAAW,SAhFO;AAiFlB,YAAU,SAjFQ;AAkFlB,sBAAoB,SAlFF;AAmFlB,gBAAc,SAnFI;AAoFlB,kBAAgB,SApFE;AAqFlB,kBAAgB,SArFE;AAsFlB,oBAAkB,SAtFA;AAuFlB,qBAAmB,SAvFD;AAwFlB,uBAAqB,SAxFH;AAyFlB,qBAAmB,SAzFD;AA0FlB,qBAAmB,SA1FD;AA2FlB,kBAAgB,SA3FE;AA4FlB,eAAa,SA5FK;AA6FlB,eAAa,SA7FK;AA8FlB,cAAY,SA9FM;AA+FlB,iBAAe,SA/FG;AAgGlB,UAAQ,SAhGU;AAiGlB,aAAW,SAjGO;AAkGlB,WAAS,SAlGS;AAmGlB,eAAa,SAnGK;AAoGlB,YAAU,SApGQ;AAqGlB,eAAa,SArGK;AAsGlB,YAAU,SAtGQ;AAuGlB,mBAAiB,SAvGC;AAwGlB,eAAa,SAxGK;AAyGlB,mBAAiB,SAzGC;AA0GlB,mBAAiB,SA1GC;AA2GlB,gBAAc,SA3GI;AA4GlB,eAAa,SA5GK;AA6GlB,UAAQ,SA7GU;AA8GlB,UAAQ,SA9GU;AA+GlB,UAAQ,SA/GU;AAgHlB,gBAAc,SAhHI;AAiHlB,YAAU,SAjHQ;AAkHlB,mBAAiB,SAlHC;AAmHlB,SAAO,SAnHW;AAoHlB,eAAa,SApHK;AAqHlB,eAAa,SArHK;AAsHlB,iBAAe,SAtHG;AAuHlB,YAAU,SAvHQ;AAwHlB,gBAAc,SAxHI;AAyHlB,cAAY,SAzHM;AA0HlB,cAAY,SA1HM;AA2HlB,YAAU,SA3HQ;AA4HlB,YAAU,SA5HQ;AA6HlB,aAAW,SA7HO;AA8HlB,eAAa,SA9HK;AA+HlB,eAAa,SA/HK;AAgIlB,UAAQ,SAhIU;AAiIlB,iBAAe,SAjIG;AAkIlB,eAAa,SAlIK;AAmIlB,SAAO,SAnIW;AAoIlB,UAAQ,SApIU;AAqIlB,aAAW,SArIO;AAsIlB,YAAU,SAtIQ;AAuIlB,eAAa,SAvIK;AAwIlB,YAAU,SAxIQ;AAyIlB,WAAS,SAzIS;AA0IlB,WAAS,SA1IS;AA2IlB,gBAAc,SA3II;AA4IlB,YAAU,SA5IQ;AA6IlB,iBAAe;AA7IG,CAApB;;AAgJO,IAAMC,oDAAsB,CAAC;AAChCC,QAAM,QAD0B;AAEhCC,UAAQ;AAFwB,CAAD,EAG9B;AACDD,QAAM,SADL;AAEDC,UAAQ;AAFP,CAH8B,EAM9B;AACDD,QAAM,QADL;AAEDC,UAAQ;AAFP,CAN8B,EAS9B;AACDD,QAAM,WADL;AAEDC,UAAQ;AAFP,CAT8B,EAY9B;AACDD,QAAM,QADL;AAEDC,UAAQ;AAFP,CAZ8B,CAA5B;;AAiBA,IAAMC,oCAAc,SAAdA,WAAc,CAACC,KAAD,EAAW;;AAEpCA,UAAQA,MAAMC,OAAN,CAAc,QAAd,EAAwB,EAAxB,EAA4BA,OAA5B,CAAoC,GAApC,EAAyC,EAAzC,EAA6CA,OAA7C,CAAqD,GAArD,EAA0D,EAA1D,CAAR;;AAEA,MAAI,qCAAqCC,IAArC,CAA0CF,KAA1C,CAAJ,EAAsD;AACpD,WAAOA,KAAP;AACD,GAFD,MAEO,IAAIL,YAAYK,KAAZ,CAAJ,EAAwB;AAC7B,WAAOL,YAAYK,KAAZ,CAAP;AACD,GAFM,MAEA,IAAIA,MAAMG,OAAN,CAAc,KAAd,MAAyB,CAA7B,EAAgC;;AAErC,QAAIC,WAAWJ,MAAMK,KAAN,CAAY,GAAZ,CAAf;AACA,QAAIC,iBAAiBF,SAASG,MAAT,GAAkB,CAAlB,GAAsB,IAAtB,GAA6B,MAAM,CAACH,SAAS,CAAT,CAAD,EAAcA,SAAS,CAAT,CAAd,EAA2BA,SAAS,CAAT,CAA3B,EAAwCI,GAAxC,CAA4C,aAAK;AACvG,UAAMC,MAAMC,SAASC,EAAEV,OAAF,CAAU,KAAV,EAAiB,EAAjB,CAAT,EAA+B,EAA/B,EAAmCW,QAAnC,CAA4C,EAA5C,CAAZ;AACA,aAAOH,IAAIF,MAAJ,KAAe,CAAf,GAAmB,MAAME,GAAzB,GAA+BA,GAAtC;AACD,KAHuD,EAGrDI,IAHqD,CAGhD,EAHgD,CAAxD;;AAKA,WAAO,sCAAqCX,IAArC,CAA0CI,cAA1C,IAA4DA,cAA5D,GAA6E;AAApF;AAED,GAVM,MAUA;AACL,WAAO,IAAP;AACD;AAEF,CAtBM;;AAwBA,IAAMQ,0BAAS;AACpB,gBAAc,IADM;AAEpB,gBAAc,IAFM;AAGpB,kBAAgB,IAHI;AAIpB,iBAAe,IAJK;AAKpB,gBAAc,IALM;AAMpB,gBAAc,IANM;AAOpB,cAAY,GAPQ;AAQpB,gBAAc;AARM,CAAf;;AAWP,IAAMC,aAAaC,OAAOC,IAAP,CAAYH,MAAZ,CAAnB;AACA,IAAMI,aAAaH,WAAWP,GAAX,CAAe;AAAA,SAAOM,OAAOK,GAAP,CAAP;AAAA,CAAf,CAAnB;;AAEA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,KAAD,EAAQC,YAAR,EAAyB;;AAElD,MAAI,CAACD,KAAD,IAAU,CAACA,MAAMF,GAArB,EAA0B;AACxB,WAAO,wCAAP;AACD;;AAED,MAAMI,eAAeD,aAAaE,cAAb,CAA4BH,MAAMF,GAAlC,CAArB;;AAEA,MAAI,CAACI,YAAL,EAAmB;AACjB,WAAO,wCAAP;AACD;;AAED,MAAME,YAAYF,aAAaG,WAAb,CAAyB,CAAzB,CAAlB;;AAEA,MAAI,CAACD,SAAL,EAAgB;AACd,WAAO,wCAAP;AACD;;AAED,MAAME,SAASL,aAAaM,SAAb,CAAuBH,SAAvB,CAAf;AACA,MAAMI,YAAYF,OAAOG,OAAP,GAAiBC,WAAjB,EAAlB;;AAnBkD,oBAqBvBV,MAAMW,IArBiB;AAAA,MAqB5CC,KArB4C,eAqB5CA,KArB4C;AAAA,MAqBrCC,SArBqC,eAqBrCA,SArBqC;;AAAA,wBAsBIP,OAAOQ,OAAP,EAtBJ;AAAA,MAsB5CC,GAtB4C,mBAsB5CA,GAtB4C;AAAA,MAsBvCC,IAtBuC,mBAsBvCA,IAtBuC;AAAA,MAsBjCC,WAtBiC,mBAsBjCA,WAtBiC;AAAA,MAsBpBC,KAtBoB,mBAsBpBA,KAtBoB;AAAA,MAsBbC,MAtBa,mBAsBbA,MAtBa;AAAA,MAsBLC,IAtBK,mBAsBLA,IAtBK;;AAwBlD,MAAIZ,cAAc,OAAlB,EAA2B;;AAEzB,QAAIa,iBAAiB,EAArB;AACA,QAAIC,kBAAkB,EAAtB;;AAEA,QAAIV,KAAJ,EAAW;AACTS,qBAAeT,KAAf,GAAuBA,KAAvB;AACAU,yBAAmB,YAAYV,KAA/B;AACD,KAHD,MAGO,IAAIC,SAAJ,EAAe;AACpBQ,qBAAeE,SAAf,GAA2BV,SAA3B;AACAS,yBAAmB,YAAYT,SAA/B;AACD;;AAED,QAAIG,IAAJ,EAAU;AACR,aACE;AAAA;AAAA,UAAK,WAAW,0BAA0BM,eAA1C,EAA2D,OAAOD,cAAlE;AACE;AAAA;AAAA,YAAG,OAAO,EAACG,SAAQ,cAAT,EAAV,EAAoC,MAAMR,IAA1C,EAAgD,QAAQC,WAAxD;AACE,4DAASG,IAAT,IAAe,KAAKL,GAApB,EAAyB,OAAOG,KAAhC,EAAuC,QAAQC,MAA/C,EAAuD,OAAO,EAACD,YAAD,EAAQC,cAAR,EAA9D;AADF;AADF,OADF;AAOD,KARD,MAQO;AACL,aACE;AAAA;AAAA,UAAK,WAAW,0BAA0BG,eAA1C,EAA2D,OAAOD,cAAlE;AACE,0DAASD,IAAT,IAAe,KAAKL,GAApB,EAAyB,OAAOG,KAAhC,EAAuC,QAAQC,MAA/C,EAAuD,OAAO,EAACD,YAAD,EAAQC,cAAR,EAA9D;AADF,OADF;AAKD;AAEF,GA7BD,MA6BO,IAAIX,cAAc,OAAlB,EAA2B;AAChC,WAAO;AAAA;AAAA,QAAK,WAAU,uBAAf;AAAuC,wDAAO,cAAP,IAAoBY,IAApB,IAA0B,KAAKL,GAA/B;AAAvC,KAAP;AACD,GAFM,MAEA,IAAIP,cAAc,OAAlB,EAA2B;AAChC,WAAO;AAAA;AAAA,QAAK,WAAU,uBAAf;AAAuC,wDAAO,cAAP,IAAoBY,IAApB,IAA0B,KAAKL,GAA/B,EAAoC,OAAOG,KAA3C,EAAkD,QAAQC,MAA1D;AAAvC,KAAP;AACD,GAFM,MAEA,IAAIX,cAAc,OAAlB,EAA2B;AAChC,WAAO;AAAA;AAAA,QAAK,WAAU,uBAAf;AAAuC,6CAAK,yBAAyB,EAACiB,QAAQV,GAAT,EAA9B;AAAvC,KAAP;AACD,GAFM,MAEA,IAAIP,cAAc,IAAlB,EAAwB;AAC7B,WAAO,yCAAP;AACD,GAFM,MAEA;AACL,WAAO,wCAAP;AACD;AAEF,CAjED;;AAmEA,IAAMkB,cAAc,SAAdA,WAAc,CAACC,KAAD;AAAA,SAAW,UAACC,KAAD,EAAW;;AAExCA,YAAQA,MAAMlB,WAAN,EAAR;;AAEA,QAAIkB,UAAU,eAAd,EAA+B;AAC7B,aAAO,wCAAM,OAAO,EAACC,gBAAgB,cAAjB,EAAb,GAAP;AACD,KAFD,MAEO,IAAID,UAAU,aAAd,EAA6B;AAClC,aAAO,0CAAP;AACD,KAFM,MAEA,IAAIA,UAAU,WAAd,EAA2B;AAChC,aAAO,0CAAP;AACD,KAFM,MAEA,IAAIA,MAAM9C,OAAN,CAAc,QAAd,MAA4B,CAAhC,EAAmC;AACxC,aAAO,wCAAM,OAAO,EAACH,OAAO,MAAMiD,MAAM5C,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAd,EAAb,GAAP;AACD,KAFM,MAEA,IAAI4C,MAAM9C,OAAN,CAAc,UAAd,MAA8B,CAAlC,EAAqC;AAC1C,aAAO,wCAAM,OAAO,EAACgD,iBAAiB,MAAMF,MAAM5C,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAxB,EAAb,GAAP;AACD,KAFM,MAEA,IAAI4C,MAAM9C,OAAN,CAAc,WAAd,MAA+B,CAAnC,EAAsC;AAC3C,aAAO,wCAAM,OAAO,EAACiD,UAAUH,MAAM5C,KAAN,CAAY,GAAZ,EAAiB,CAAjB,IAAsB,IAAjC,EAAb,GAAP;AACD,KAFM,MAEA,IAAI4C,MAAM9C,OAAN,CAAc,aAAd,MAAiC,CAArC,EAAwC;AAC7C,aAAO,wCAAM,OAAO,EAACkD,YAAYJ,MAAM5C,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAb,EAAb,GAAP;AACD,KAFM,MAEA,IAAI4C,MAAM9C,OAAN,CAAc,gBAAd,MAAoC,CAAxC,EAA2C;AAChD,aAAO,wCAAM,OAAO,EAACmD,eAAeL,MAAM5C,KAAN,CAAY,GAAZ,EAAiB,CAAjB,IAAsB,IAAtC,EAAb,GAAP;AACD,KAFM,MAEA,IAAI4C,MAAM9C,OAAN,CAAc,SAAd,MAA6B,CAAjC,EAAoC;AACzC,aAAO,wCAAM,OAAO,EAACoD,aAAaN,MAAM5C,KAAN,CAAY,GAAZ,EAAiB,CAAjB,IAAsB,IAApC,EAA0CmD,cAAcP,MAAM5C,KAAN,CAAY,GAAZ,EAAiB,CAAjB,IAAsB,IAA9E,EAAb,GAAP;AACD,KAFM,MAEA,IAAI4C,MAAM9C,OAAN,CAAc,aAAd,MAAiC,CAArC,EAAwC;AAC7C,UAAIsD,aAAaT,MAAMU,YAAN,CAAmBC,IAAnB,CAAwB,UAACC,IAAD;AAAA,eAAUA,KAAK/D,IAAL,CAAUkC,WAAV,OAA4BkB,MAAM5C,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAtC;AAAA,OAAxB,CAAjB;AACA,UAAI,CAACoD,UAAL,EAAiB;AACjB,aAAO,wCAAM,OAAO,EAACA,YAAYA,WAAW3D,MAAxB,EAAb,GAAP;AACD;AAEF,GA5BmB;AAAA,CAApB;;AA8BA,IAAM+D,cAAc,SAAdA,WAAc,CAACvC,YAAD;AAAA,SAAkB,UAACD,KAAD,EAAW;;AAE/C,QAAIyC,SAAS,IAAb;AACA,QAAIC,aAAa,EAAjB;;AAEA,QAAMC,YAAY3C,MAAM4C,IAAN,CAAWlC,WAAX,EAAlB;AAL+C,QAMvCa,SANuC,GAMzBvB,MAAMW,IANmB,CAMvCY,SANuC;;;AAQ/C,QAAIA,SAAJ,EAAe;AACbmB,4CAAmCnB,SAAnC;AACD;;AAED,QAAIoB,cAAc,QAAlB,EAA4B;AAC1B,aAAO5C,mBAAmBC,KAAnB,EAA0BC,YAA1B,CAAP;AACD,KAFD,MAEO,IAAI0C,cAAc,YAAlB,EAAgC;;AAErC,UAAME,gBAAgB5C,aAAa6C,cAAb,CAA4B9C,MAAMF,GAAlC,CAAtB;AACA,UAAMiD,YAAY9C,aAAa+C,aAAb,CAA2BhD,MAAMF,GAAjC,CAAlB;AACA,UAAMmD,oBAAoBJ,iBAAiBA,cAAcpC,OAAd,EAA3C;AACA,UAAMyC,gBAAgBH,aAAaA,UAAUtC,OAAV,EAAnC;;AAEA,UAAIwC,sBAAsB,YAAtB,IAAsCC,kBAAkB,YAA5D,EAA0E;AACxE,eAAO;AACLC,iBAAO,OADF;AAELC,eAAK;AAFA,SAAP;AAID;AACD,UAAIH,sBAAsB,YAA1B,EAAwC;AACtC,eAAO;AACLE,iBAAO,OADF;AAELC,eAAK;AAFA,SAAP;AAID;AACD,UAAIF,kBAAkB,YAAtB,EAAoC;AAClC,eAAO;AACLC,iBAAO,EADF;AAELC,eAAK;AAFA,SAAP;AAID;;AAED,aAAO;AACLD,eAAO,EADF;AAELC,aAAK;AAFA,OAAP;AAKD,KA/BM,MA+BA,IAAI3D,OAAOkD,SAAP,CAAJ,EAAuB;AAC5B,aAAO;AACLQ,qBAAW1D,OAAOkD,SAAP,CAAX,GAA+BD,UAA/B,MADK;AAELU,oBAAU3D,OAAOkD,SAAP,CAAV;AAFK,OAAP;AAID,KALM,MAKA,IAAIA,cAAc,qBAAlB,EAAyC;AAC9C,aAAO;AACLQ,uBAAaT,UAAb,MADK;AAELU,aAAK,OAFA;AAGLC,cAAM;AAHD,OAAP;AAKD,KANM,MAMA,IAAIV,cAAc,mBAAlB,EAAuC;AAC5C,aAAO;AACLQ,uBAAaT,UAAb,MADK;AAELU,aAAK,OAFA;AAGLC,cAAM;AAHD,OAAP;AAKD;AAEF,GAhEmB;AAAA,CAApB;;AAkEA,IAAMC,eAAe,SAAfA,YAAe,CAAChD,MAAD,EAASiD,YAAT,EAA0B;;AAE7C,MAAId,SAASc,YAAb;AACA,MAAMC,aAAalD,OAAOsC,IAAP,CAAYlC,WAAZ,EAAnB;;AAEA,MAAI8C,eAAe,MAAnB,EAA2B;AACzB,WAAO;AAAA;AAAA,QAAG,MAAMlD,OAAOK,IAAP,CAAY8C,IAArB,EAA2B,QAAQnD,OAAOK,IAAP,CAAY+C,MAA/C;AAAwDH;AAAxD,KAAP;AACD,GAFD,MAEO,IAAIC,eAAe,OAAnB,EAA4B;AACjC,WAAO;AAAA;AAAA,QAAM,OAAO,EAAC7E,OAAM2B,OAAOK,IAAP,CAAYhC,KAAnB,EAAb;AAAyC4E;AAAzC,KAAP;AACD,GAFM,MAEA,IAAIC,eAAe,UAAnB,EAA+B;AACpC,WAAO;AAAA;AAAA,QAAM,OAAO,EAAC1B,iBAAgBxB,OAAOK,IAAP,CAAYhC,KAA7B,EAAb;AAAmD4E;AAAnD,KAAP;AACD;AAEF,CAbD;;AAeA,IAAMI,cAAc,SAAdA,WAAc,CAAChC,KAAD;AAAA,SAAW,UAACiC,QAAD,EAAWC,IAAX,EAAiBC,YAAjB,EAAkC;;AAE/D,QAAI,CAACD,IAAD,IAAS,CAACA,KAAKjC,KAAnB,EAA0B;AACxB,aAAOkC,YAAP;AACD;;AAED,QAAIC,WAAWD,YAAf;;AAEA,SAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAIH,KAAKjC,KAAL,CAAW1C,MAA/B,EAAuC8E,GAAvC,EAA4C;AAC1C,UAAIJ,aAAa,MAAb,IAAuBC,KAAKjC,KAAL,CAAWoC,CAAX,MAAkB,OAA7C,EAAsD;AACpD,YAAIrF,QAAQD,YAAYmF,KAAKjC,KAAL,CAAWjD,KAAvB,CAAZ;AACAoF,mBAAWpF,QAAQoF,SAASE,GAAT,CAAa,WAAWtF,MAAMC,OAAN,CAAc,GAAd,EAAmB,EAAnB,EAAuBsF,WAAvB,EAAxB,CAAR,GAAwEH,QAAnF;AACD,OAHD,MAGO,IAAIH,aAAa,MAAb,IAAuBC,KAAKjC,KAAL,CAAWoC,CAAX,MAAkB,kBAA7C,EAAiE;AACtE,YAAIrF,SAAQD,YAAYmF,KAAKjC,KAAL,CAAWE,eAAvB,CAAZ;AACAiC,mBAAWpF,SAAQoF,SAASE,GAAT,CAAa,aAAatF,OAAMC,OAAN,CAAc,GAAd,EAAmB,EAAnB,EAAuBsF,WAAvB,EAA1B,CAAR,GAA0EH,QAArF;AACD,OAHM,MAGA,IAAIH,aAAa,MAAb,IAAuBC,KAAKjC,KAAL,CAAWoC,CAAX,MAAkB,WAA7C,EAA0D;AAC/DD,mBAAWA,SAASE,GAAT,CAAa,cAAc5E,SAASwE,KAAKjC,KAAL,CAAWG,QAApB,EAA8B,EAA9B,CAA3B,CAAX;AACD,OAFM,MAEA,IAAI6B,aAAa,MAAb,IAAuBC,KAAKjC,KAAL,CAAWoC,CAAX,MAAkB,aAA7C,EAA4D;AACjED,mBAAWA,SAASE,GAAT,CAAa,gBAAgBJ,KAAKjC,KAAL,CAAWI,UAAxC,CAAX;AACD,OAFM,MAEA,IAAI4B,aAAa,MAAb,IAAuBC,KAAKjC,KAAL,CAAWoC,CAAX,MAAkB,gBAAzC,IAA6D,CAACG,MAAMN,KAAKjC,KAAL,CAAWK,aAAX,CAAyBrD,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CAAN,CAAlE,EAAqH;AAC1HmF,mBAAWA,SAASE,GAAT,CAAa,mBAAmB5E,SAASwE,KAAKjC,KAAL,CAAWK,aAApB,EAAmC,EAAnC,CAAhC,CAAX;AACD,OAFM,MAEA,IAAI2B,aAAa,MAAb,KAAwBC,KAAKjC,KAAL,CAAWoC,CAAX,MAAkB,cAAlB,IAAoCH,KAAKjC,KAAL,CAAWoC,CAAX,MAAkB,eAA9E,CAAJ,EAAoG;AACzGD,mBAAWA,SAASE,GAAT,CAAa,YAAY5E,SAASwE,KAAKjC,KAAL,CAAWM,WAApB,EAAiC,EAAjC,CAAzB,CAAX;AACD,OAFM,MAEA,IAAI0B,aAAa,MAAb,IAAuBC,KAAKjC,KAAL,CAAWoC,CAAX,MAAkB,iBAAzC,IAA8DH,KAAKjC,KAAL,CAAWC,cAAX,KAA8B,cAAhG,EAAgH;AACrHkC,mBAAWA,SAASE,GAAT,CAAa,eAAb,CAAX;AACD,OAFM,MAEA,IAAIL,aAAa,MAAb,IAAuBC,KAAKjC,KAAL,CAAWoC,CAAX,MAAkB,aAA7C,EAA4D;AACjE,YAAI5B,aAAaT,MAAMU,YAAN,CAAmBC,IAAnB,CAAwB,UAACC,IAAD;AAAA,iBAAUA,KAAK9D,MAAL,CAAYiC,WAAZ,OAA8BmD,KAAKjC,KAAL,CAAWQ,UAAX,CAAsB1B,WAAtB,EAAxC;AAAA,SAAxB,CAAjB;AACA,YAAI,CAAC0B,UAAL,EAAiB;AACjB2B,mBAAWA,SAASE,GAAT,CAAa,gBAAgB7B,WAAW5D,IAAX,CAAgB0F,WAAhB,EAA7B,CAAX;AACD;AACF;;AAED,QAAIN,aAAa,KAAjB,EAAwB;AACtBG,iBAAWA,SAASE,GAAT,CAAa,aAAb,CAAX;AACD,KAFD,MAEO,IAAIL,aAAa,KAAjB,EAAwB;AAC7BG,iBAAWA,SAASE,GAAT,CAAa,WAAb,CAAX;AACD;;AAED,WAAOF,QAAP;AAED,GAxCmB;AAAA,CAApB;;AA0CA,IAAMK,eAAe,SAAfA,YAAe,CAACR,QAAD,EAAWC,IAAX,EAAiBQ,YAAjB,EAAkC;AAAA,MAE7CC,GAF6C,GAEQT,IAFR,CAE7CS,GAF6C;AAAA,MAExCC,KAFwC,GAEQV,IAFR,CAExCU,KAFwC;AAAA,MAEjCC,EAFiC,GAEQX,IAFR,CAEjCW,EAFiC;AAAA,MAE7BC,QAF6B,GAEQZ,IAFR,CAE7BY,QAF6B;AAAA,MAEnBC,QAFmB,GAEQb,IAFR,CAEnBa,QAFmB;AAAA,MAETC,IAFS,GAEQd,IAFR,CAETc,IAFS;AAAA,MAEHC,MAFG,GAEQf,IAFR,CAEHe,MAFG;;AAGrD,MAAIxD,OAAO,EAAX;;AAEAoD,SAAOpD,KAAKoD,EAAL,GAAUA,EAAjB;AACAF,UAAQlD,KAAKkD,GAAL,GAAWA,GAAnB;AACAC,YAAUnD,KAAKmD,KAAL,GAAaA,KAAvB;AACAE,eAAarD,KAAKqD,QAAL,GAAgBA,QAA7B;AACAC,eAAatD,KAAKyD,QAAL,GAAgBH,QAA7B;AACAC,WAASvD,KAAKuD,IAAL,GAAYA,IAArB;AACAC,aAAWxD,KAAKwD,MAAL,GAAcA,MAAzB;;AAEA,MAAIhB,aAAa,GAAb,IAAoB,CAACC,KAAKiB,gBAAL,CAAsB,KAAtB,EAA6B5F,MAAtD,EAA8D;AAAA,QACtDuE,IADsD,GACrCI,IADqC,CACtDJ,IADsD;AAAA,QAChDC,MADgD,GACrCG,IADqC,CAChDH,MADgD;;AAE5D,WAAOW,aAAa,MAAb,EAAqB,SAArB,EAA+B,EAAEZ,UAAF,EAAQC,cAAR,EAA/B,CAAP;AACD,GAHD,MAGO,IAAIE,aAAa,OAAjB,EAA0B;AAC/B,WAAOS,aAAa,OAAb,EAAsB,WAAtB,EAAkC,EAAEtD,KAAK8C,KAAKkB,GAAZ,EAAiB3D,UAAjB,EAAlC,CAAP;AACD,GAFM,MAEA,IAAIwC,aAAa,OAAjB,EAA0B;AAC/B,WAAOS,aAAa,OAAb,EAAsB,WAAtB,EAAkC,EAAEtD,KAAK8C,KAAKkB,GAAZ,EAAiB3D,UAAjB,EAAlC,CAAP;AACD,GAFM,MAEA,IAAIwC,aAAa,KAAjB,EAAwB;;AAE7B,QAAIoB,aAAanB,KAAKmB,UAAtB;AACA,QAAIC,aAAa,EAAE7D,UAAF,EAAjB;AAH6B,sBAILyC,KAAKjC,KAJA;AAAA,QAIvBV,KAJuB,eAIvBA,KAJuB;AAAA,QAIhBC,MAJgB,eAIhBA,MAJgB;;;AAM7B8D,eAAWlE,GAAX,GAAiB8C,KAAKkB,GAAtB;AACA7D,cAAU+D,WAAW/D,KAAX,GAAmBA,KAA7B;AACAC,eAAW8D,WAAW9D,MAAX,GAAoBA,MAA/B;;AAEA,QAAI6D,WAAWpB,QAAX,CAAoBlD,WAApB,OAAsC,GAA1C,EAA+C;AAC7CuE,iBAAWjE,IAAX,GAAkBgE,WAAWvB,IAA7B;AACAwB,iBAAWhE,WAAX,GAAyB+D,WAAWtB,MAApC;AACD;;AAED,WAAOW,aAAa,OAAb,EAAsB,WAAtB,EAAmCY,UAAnC,CAAP;AAED,GAjBM,MAiBA,IAAIrB,aAAa,IAAjB,EAAuB;AAC5B,WAAOS,aAAa,IAAb,EAAmB,WAAnB,EAAgC,EAAhC,CAAP;AACD,GAFM,MAEA,IAAIR,KAAKmB,UAAL,IAAmBnB,KAAKmB,UAAL,CAAgBE,SAAhB,CAA0BC,QAA1B,CAAmC,YAAnC,CAAvB,EAAyE;;AAE9E,QAAMC,eAAevB,KAAKwB,SAAL,IAAkBxB,KAAKyB,SAA5C;;AAEA,QAAIF,YAAJ,EAAkB;AAChB,aAAOf,aAAa,OAAb,EAAsB,WAAtB,EAAmC;AACxCtD,aAAKqE;AADmC,OAAnC,CAAP;AAGD;AAEF;AAEF,CAnDD;;AAqDA,IAAMG,cAAc,SAAdA,WAAc,CAAC3B,QAAD,EAAWC,IAAX,EAAoB;;AAEtC,MAAI2B,YAAY3B,KAAKjC,KAAL,IAAc,EAA9B;;AAEA,MAAIiC,KAAKqB,SAAL,IAAkBrB,KAAKqB,SAAL,CAAeC,QAAf,CAAwB,YAAxB,CAAtB,EAA6D;;AAE3D,WAAO;AACLvC,YAAM,QADD;AAELjC,YAAM;AACJC,eAAO4E,UAAU5E,KADb;AAEJC,mBAAW2E,UAAUjE;AAFjB;AAFD,KAAP;AAQD,GAVD,MAUO,IAAIqC,aAAa,KAAjB,EAAwB;;AAE7B,WAAO;AACLhB,YAAM,QADD;AAELjC,YAAM;AACJC,eAAO4E,UAAU5E,KADb;AAEJC,mBAAW2E,UAAUjE;AAFjB;AAFD,KAAP;AAQD,GAVM,MAUA,IAAIqC,aAAa,IAAjB,EAAuB;;AAE5B,WAAO;AACLhB,YAAM,QADD;AAELjC,YAAM;AAFD,KAAP;AAKD,GAPM,MAOA,IAAI6E,UAAUjE,SAAV,IAAuB1B,WAAWf,OAAX,CAAmB8E,QAAnB,IAA+B,CAAC,CAA3D,EAA8D;;AAEnE,WAAO;AACLhB,YAAMlD,WAAWG,WAAWf,OAAX,CAAmB8E,QAAnB,CAAX,CADD;AAELjD,YAAM;AACJY,mBAAWiE,UAAUjE;AADjB;AAFD,KAAP;AAOD;AAEF,CA1CD;;AA4CO,IAAMkE,4CAAkB,SAAlBA,eAAkB,CAAC9D,KAAD,EAAW;;AAExC,SAAO;AACLD,iBAAaA,YAAYC,KAAZ,CADR;AAEL2B,kBAAcA,YAFT;AAGLd,iBAAaA,YAAYb,MAAM1B,YAAlB;AAHR,GAAP;AAMD,CARM;;AAUA,IAAMyF,gDAAoB,SAApBA,iBAAoB,CAAC/D,KAAD,EAAW;;AAE1C,SAAO;AACLgC,iBAAaA,YAAYhC,KAAZ,CADR;AAELyC,8BAFK;AAGLmB;AAHK,GAAP;AAMD,CARM","file":"configs.js","sourcesContent":["import React from 'react'\n\nconst namedColors = {\n  \"aliceblue\": \"#f0f8ff\",\n  \"antiquewhite\": \"#faebd7\",\n  \"aqua\": \"#00ffff\",\n  \"aquamarine\": \"#7fffd4\",\n  \"azure\": \"#f0ffff\",\n  \"beige\": \"#f5f5dc\",\n  \"bisque\": \"#ffe4c4\",\n  \"black\": \"#000000\",\n  \"blanchedalmond\": \"#ffebcd\",\n  \"blue\": \"#0000ff\",\n  \"blueviolet\": \"#8a2be2\",\n  \"brown\": \"#a52a2a\",\n  \"burlywood\": \"#deb887\",\n  \"cadetblue\": \"#5f9ea0\",\n  \"chartreuse\": \"#7fff00\",\n  \"chocolate\": \"#d2691e\",\n  \"coral\": \"#ff7f50\",\n  \"cornflowerblue\": \"#6495ed\",\n  \"cornsilk\": \"#fff8dc\",\n  \"crimson\": \"#dc143c\",\n  \"cyan\": \"#00ffff\",\n  \"darkblue\": \"#00008b\",\n  \"darkcyan\": \"#008b8b\",\n  \"darkgoldenrod\": \"#b8860b\",\n  \"darkgray\": \"#a9a9a9\",\n  \"darkgreen\": \"#006400\",\n  \"darkkhaki\": \"#bdb76b\",\n  \"darkmagenta\": \"#8b008b\",\n  \"darkolivegreen\": \"#556b2f\",\n  \"darkorange\": \"#ff8c00\",\n  \"darkorchid\": \"#9932cc\",\n  \"darkred\": \"#8b0000\",\n  \"darksalmon\": \"#e9967a\",\n  \"darkseagreen\": \"#8fbc8f\",\n  \"darkslateblue\": \"#483d8b\",\n  \"darkslategray\": \"#2f4f4f\",\n  \"darkturquoise\": \"#00ced1\",\n  \"darkviolet\": \"#9400d3\",\n  \"deeppink\": \"#ff1493\",\n  \"deepskyblue\": \"#00bfff\",\n  \"dimgray\": \"#696969\",\n  \"dodgerblue\": \"#1e90ff\",\n  \"firebrick\": \"#b22222\",\n  \"floralwhite\": \"#fffaf0\",\n  \"forestgreen\": \"#228b22\",\n  \"fuchsia\": \"#ff00ff\",\n  \"gainsboro\": \"#dcdcdc\",\n  \"ghostwhite\": \"#f8f8ff\",\n  \"gold\": \"#ffd700\",\n  \"goldenrod\": \"#daa520\",\n  \"gray\": \"#808080\",\n  \"green\": \"#008000\",\n  \"greenyellow\": \"#adff2f\",\n  \"honeydew\": \"#f0fff0\",\n  \"hotpink\": \"#ff69b4\",\n  \"indianred \": \"#cd5c5c\",\n  \"indigo\": \"#4b0082\",\n  \"ivory\": \"#fffff0\",\n  \"khaki\": \"#f0e68c\",\n  \"lavender\": \"#e6e6fa\",\n  \"lavenderblush\": \"#fff0f5\",\n  \"lawngreen\": \"#7cfc00\",\n  \"lemonchiffon\": \"#fffacd\",\n  \"lightblue\": \"#add8e6\",\n  \"lightcoral\": \"#f08080\",\n  \"lightcyan\": \"#e0ffff\",\n  \"lightgoldenrodyellow\": \"#fafad2\",\n  \"lightgrey\": \"#d3d3d3\",\n  \"lightgreen\": \"#90ee90\",\n  \"lightpink\": \"#ffb6c1\",\n  \"lightsalmon\": \"#ffa07a\",\n  \"lightseagreen\": \"#20b2aa\",\n  \"lightskyblue\": \"#87cefa\",\n  \"lightslategray\": \"#778899\",\n  \"lightsteelblue\": \"#b0c4de\",\n  \"lightyellow\": \"#ffffe0\",\n  \"lime\": \"#00ff00\",\n  \"limegreen\": \"#32cd32\",\n  \"linen\": \"#faf0e6\",\n  \"magenta\": \"#ff00ff\",\n  \"maroon\": \"#800000\",\n  \"mediumaquamarine\": \"#66cdaa\",\n  \"mediumblue\": \"#0000cd\",\n  \"mediumorchid\": \"#ba55d3\",\n  \"mediumpurple\": \"#9370d8\",\n  \"mediumseagreen\": \"#3cb371\",\n  \"mediumslateblue\": \"#7b68ee\",\n  \"mediumspringgreen\": \"#00fa9a\",\n  \"mediumturquoise\": \"#48d1cc\",\n  \"mediumvioletred\": \"#c71585\",\n  \"midnightblue\": \"#191970\",\n  \"mintcream\": \"#f5fffa\",\n  \"mistyrose\": \"#ffe4e1\",\n  \"moccasin\": \"#ffe4b5\",\n  \"navajowhite\": \"#ffdead\",\n  \"navy\": \"#000080\",\n  \"oldlace\": \"#fdf5e6\",\n  \"olive\": \"#808000\",\n  \"olivedrab\": \"#6b8e23\",\n  \"orange\": \"#ffa500\",\n  \"orangered\": \"#ff4500\",\n  \"orchid\": \"#da70d6\",\n  \"palegoldenrod\": \"#eee8aa\",\n  \"palegreen\": \"#98fb98\",\n  \"paleturquoise\": \"#afeeee\",\n  \"palevioletred\": \"#d87093\",\n  \"papayawhip\": \"#ffefd5\",\n  \"peachpuff\": \"#ffdab9\",\n  \"peru\": \"#cd853f\",\n  \"pink\": \"#ffc0cb\",\n  \"plum\": \"#dda0dd\",\n  \"powderblue\": \"#b0e0e6\",\n  \"purple\": \"#800080\",\n  \"rebeccapurple\": \"#663399\",\n  \"red\": \"#ff0000\",\n  \"rosybrown\": \"#bc8f8f\",\n  \"royalblue\": \"#4169e1\",\n  \"saddlebrown\": \"#8b4513\",\n  \"salmon\": \"#fa8072\",\n  \"sandybrown\": \"#f4a460\",\n  \"seagreen\": \"#2e8b57\",\n  \"seashell\": \"#fff5ee\",\n  \"sienna\": \"#a0522d\",\n  \"silver\": \"#c0c0c0\",\n  \"skyblue\": \"#87ceeb\",\n  \"slateblue\": \"#6a5acd\",\n  \"slategray\": \"#708090\",\n  \"snow\": \"#fffafa\",\n  \"springgreen\": \"#00ff7f\",\n  \"steelblue\": \"#4682b4\",\n  \"tan\": \"#d2b48c\",\n  \"teal\": \"#008080\",\n  \"thistle\": \"#d8bfd8\",\n  \"tomato\": \"#ff6347\",\n  \"turquoise\": \"#40e0d0\",\n  \"violet\": \"#ee82ee\",\n  \"wheat\": \"#f5deb3\",\n  \"white\": \"#ffffff\",\n  \"whitesmoke\": \"#f5f5f5\",\n  \"yellow\": \"#ffff00\",\n  \"yellowgreen\": \"#9acd32\"\n}\n\nexport const defaultFontFamilies = [{\n    name: 'Araial',\n    family: 'Arial, Helvetica, sans-serif'\n  }, {\n    name: 'Georgia',\n    family: 'Georgia, serif'\n  }, {\n    name: 'Impact',\n    family: 'Impact, serif'\n  }, {\n    name: 'Monospace',\n    family: '\"Courier New\", Courier, monospace'\n  }, {\n    name: 'Tahoma',\n    family: \"tahoma, arial, 'Hiragino Sans GB', 宋体, sans-serif\"\n}]\n\nexport const getHexColor = (color) => {\n\n  color = color.replace('color:', '').replace(';', '').replace(' ', '')\n\n  if (/^#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})$/.test(color)) {\n    return color\n  } else if (namedColors[color]) {\n    return namedColors[color]\n  } else if (color.indexOf('rgb') === 0) {\n\n    let rgbArray = color.split(',')\n    let convertedColor = rgbArray.length < 3 ? null : '#' + [rgbArray[0], rgbArray[1], rgbArray[2]].map(x => {\n      const hex = parseInt(x.replace(/\\D/g, ''), 10).toString(16)\n      return hex.length === 1 ? '0' + hex : hex\n    }).join('')\n\n    return /^#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})$/.test(convertedColor) ? convertedColor : null\n\n  } else {\n    return null\n  }\n\n}\n\nexport const blocks = {\n  'header-one': 'h1',\n  'header-two': 'h2',\n  'header-three': 'h3',\n  'header-four': 'h4',\n  'header-fiv': 'h5',\n  'header-six': 'h6',\n  'unstyled': 'p',\n  'blockquote': 'blockquote'\n}\n\nconst blockTypes = Object.keys(blocks)\nconst blockNames = blockTypes.map(key => blocks[key])\n\nconst convertAtomicBlock = (block, contentState) => {\n\n  if (!block || !block.key) {\n    return <p></p>\n  }\n\n  const contentBlock = contentState.getBlockForKey(block.key)\n\n  if (!contentBlock) {\n    return <p></p>\n  }\n\n  const entityKey = contentBlock.getEntityAt(0)\n\n  if (!entityKey) {\n    return <p></p>\n  }\n\n  const entity = contentState.getEntity(entityKey)\n  const mediaType = entity.getType().toLowerCase()\n\n  let { float, alignment } = block.data\n  let { url, link, link_target, width, height, meta } = entity.getData()\n\n  if (mediaType === 'image') {\n\n    let imageWrapStyle = {}\n    let styledClassName = ''\n\n    if (float) {\n      imageWrapStyle.float = float\n      styledClassName += ' float-' + float\n    } else if (alignment) {\n      imageWrapStyle.textAlign = alignment\n      styledClassName += ' align-' + alignment\n    }\n\n    if (link) {\n      return (\n        <div className={\"media-wrap image-wrap\" + styledClassName} style={imageWrapStyle}>\n          <a style={{display:'inline-block'}} href={link} target={link_target}>\n            <img {...meta} src={url} width={width} height={height} style={{width, height}} />\n          </a>\n        </div>\n      )\n    } else {\n      return (\n        <div className={\"media-wrap image-wrap\" + styledClassName} style={imageWrapStyle}>\n          <img {...meta} src={url} width={width} height={height} style={{width, height}}/>\n        </div>\n      )\n    }\n\n  } else if (mediaType === 'audio') {\n    return <div className=\"media-wrap audio-wrap\"><audio controls {...meta} src={url} /></div>\n  } else if (mediaType === 'video') {\n    return <div className=\"media-wrap video-wrap\"><video controls {...meta} src={url} width={width} height={height} /></div>\n  } else if (mediaType === 'embed') {\n    return <div className=\"media-wrap embed-wrap\"><div dangerouslySetInnerHTML={{__html: url}}/></div>\n  } else if (mediaType === 'hr') {\n    return <hr></hr>\n  } else {\n    return <p></p>\n  }\n\n}\n\nconst styleToHTML = (props) => (style) => {\n\n  style = style.toLowerCase()\n\n  if (style === 'strikethrough') {\n    return <span style={{textDecoration: 'line-through'}}/>\n  } else if (style === 'superscript') {\n    return <sup/>\n  } else if (style === 'subscript') {\n    return <sub/>\n  } else if (style.indexOf('color-') === 0) {\n    return <span style={{color: '#' + style.split('-')[1]}}/>\n  } else if (style.indexOf('bgcolor-') === 0) {\n    return <span style={{backgroundColor: '#' + style.split('-')[1]}}/>\n  } else if (style.indexOf('fontsize-') === 0) {\n    return <span style={{fontSize: style.split('-')[1] + 'px'}}/>\n  } else if (style.indexOf('lineheight-') === 0) {\n    return <span style={{lineHeight: style.split('-')[1]}}/> \n  } else if (style.indexOf('letterspacing-') === 0) {\n    return <span style={{letterSpacing: style.split('-')[1] + 'px'}}/>\n  } else if (style.indexOf('indent-') === 0) {\n    return <span style={{paddingLeft: style.split('-')[1] + 'px', paddingRight: style.split('-')[1] + 'px' }}/>\n  } else if (style.indexOf('fontfamily-') === 0) {\n    let fontFamily = props.fontFamilies.find((item) => item.name.toLowerCase() === style.split('-')[1])\n    if (!fontFamily) return\n    return <span style={{fontFamily: fontFamily.family}}/>\n  }\n\n}\n\nconst blockToHTML = (contentState) => (block) => {\n\n  let result = null\n  let blockStyle = \"\"\n\n  const blockType = block.type.toLowerCase()\n  const { textAlign } = block.data\n\n  if (textAlign) {\n    blockStyle = ` style=\"text-align:${textAlign};\"`\n  }\n\n  if (blockType === 'atomic') {\n    return convertAtomicBlock(block, contentState)\n  } else if (blockType === 'code-block') {\n\n    const previousBlock = contentState.getBlockBefore(block.key)\n    const nextBlock = contentState.getBlockAfter(block.key)\n    const previousBlockType = previousBlock && previousBlock.getType()\n    const nextBlockType = nextBlock && nextBlock.getType()\n\n    if (previousBlockType !== 'code-block' && nextBlockType !== 'code-block') {\n      return {\n        start: '<pre>',\n        end: '</pre>'\n      }\n    }\n    if (previousBlockType !== 'code-block') {\n      return {\n        start: '<pre>',\n        end: '<br/>'\n      }\n    }\n    if (nextBlockType !== 'code-block') {\n      return {\n        start: '',\n        end: '</pre>'\n      }\n    }\n\n    return {\n      start: '',\n      end: '<br/>',\n    }\n\n  } else if (blocks[blockType]) {\n    return {\n      start: `<${blocks[blockType]}${blockStyle}>`,\n      end: `</${blocks[blockType]}>`\n    }\n  } else if (blockType === 'unordered-list-item') {\n    return {\n      start: `<li${blockStyle}>`,\n      end: '</li>',\n      nest: <ul/>\n    }\n  } else if (blockType === 'ordered-list-item') {\n    return {\n      start: `<li${blockStyle}>`,\n      end: '</li>',\n      nest: <ol/>\n    }\n  }\n\n}\n\nconst entityToHTML = (entity, originalText) => {\n\n  let result = originalText\n  const entityType = entity.type.toLowerCase()\n\n  if (entityType === 'link') {\n    return <a href={entity.data.href} target={entity.data.target}>{originalText}</a>\n  } else if (entityType === 'color') {\n    return <span style={{color:entity.data.color}}>{originalText}</span>\n  } else if (entityType === 'bg-color') {\n    return <span style={{backgroundColor:entity.data.color}}>{originalText}</span>\n  }\n\n}\n\nconst htmlToStyle = (props) => (nodeName, node, currentStyle) => {\n\n  if (!node || !node.style) {\n    return currentStyle\n  }\n\n  let newStyle = currentStyle\n\n  for (let i = 0; i < node.style.length; i++) {\n    if (nodeName === 'span' && node.style[i] === 'color') {\n      let color = getHexColor(node.style.color)\n      newStyle = color ? newStyle.add('COLOR-' + color.replace('#', '').toUpperCase()) : newStyle\n    } else if (nodeName === 'span' && node.style[i] === 'background-color') {\n      let color = getHexColor(node.style.backgroundColor)\n      newStyle = color ? newStyle.add('BGCOLOR-' + color.replace('#', '').toUpperCase()) : newStyle\n    } else if (nodeName === 'span' && node.style[i] === 'font-size') {\n      newStyle = newStyle.add('FONTSIZE-' + parseInt(node.style.fontSize, 10))\n    } else if (nodeName === 'span' && node.style[i] === 'line-height') {\n      newStyle = newStyle.add('LINEHEIGHT-' + node.style.lineHeight)\n    } else if (nodeName === 'span' && node.style[i] === 'letter-spacing' && !isNaN(node.style.letterSpacing.replace('px', ''))) {\n      newStyle = newStyle.add('LETTERSPACING-' + parseInt(node.style.letterSpacing, 10))\n    } else if (nodeName === 'span' && (node.style[i] === 'padding-left' || node.style[i] === 'padding-right')) {\n      newStyle = newStyle.add('INDENT-' + parseInt(node.style.paddingLeft, 10))\n    } else if (nodeName === 'span' && node.style[i] === 'text-decoration' && node.style.textDecoration === 'line-through') {\n      newStyle = newStyle.add('STRIKETHROUGH')\n    } else if (nodeName === 'span' && node.style[i] === 'font-family') {\n      let fontFamily = props.fontFamilies.find((item) => item.family.toLowerCase() === node.style.fontFamily.toLowerCase())\n      if (!fontFamily) continue;\n      newStyle = newStyle.add('FONTFAMILY-' + fontFamily.name.toUpperCase())\n    }\n  }\n\n  if (nodeName === 'sup') {\n    newStyle = newStyle.add('SUPERSCRIPT')\n  } else if (nodeName === 'sub') {\n    newStyle = newStyle.add('SUBSCRIPT')\n  } \n\n  return newStyle\n\n}\n\nconst htmlToEntity = (nodeName, node, createEntity) => {\n\n  const { alt, title, id, controls, autoplay, loop, poster } = node\n  let meta = {}\n\n  id && (meta.id = id)\n  alt && (meta.alt = alt)\n  title && (meta.title = title)\n  controls && (meta.controls = controls)\n  autoplay && (meta.autoPlay = autoplay)\n  loop && (meta.loop = loop)\n  poster && (meta.poster = poster)\n\n  if (nodeName === 'a' && !node.querySelectorAll('img').length) {\n    let { href, target } = node\n    return createEntity('LINK', 'MUTABLE',{ href, target })\n  } else if (nodeName === 'audio') {\n    return createEntity('AUDIO', 'IMMUTABLE',{ url: node.src, meta }) \n  } else if (nodeName === 'video') {\n    return createEntity('VIDEO', 'IMMUTABLE',{ url: node.src, meta }) \n  } else if (nodeName === 'img') {\n\n    let parentNode = node.parentNode\n    let entityData = { meta }\n    let { width, height } = node.style\n\n    entityData.url = node.src\n    width && (entityData.width = width)\n    height && (entityData.height = height)\n\n    if (parentNode.nodeName.toLowerCase() === 'a') {\n      entityData.link = parentNode.href\n      entityData.link_target = parentNode.target\n    }\n\n    return createEntity('IMAGE', 'IMMUTABLE', entityData) \n\n  } else if (nodeName === 'hr') {\n    return createEntity('HR', 'IMMUTABLE', {}) \n  } else if (node.parentNode && node.parentNode.classList.contains('embed-wrap')) {\n\n    const embedContent = node.innerHTML || node.outerHTML\n\n    if (embedContent) {\n      return createEntity('EMBED', 'IMMUTABLE', {\n        url: embedContent\n      })   \n    }\n\n  }\n\n}\n\nconst htmlToBlock = (nodeName, node) => {\n\n  let nodeStyle = node.style || {}\n\n  if (node.classList && node.classList.contains('media-wrap')) {\n\n    return {\n      type: 'atomic',\n      data: {\n        float: nodeStyle.float,\n        alignment: nodeStyle.textAlign\n      }\n    }\n\n  } else if (nodeName === 'img') {\n\n    return {\n      type: 'atomic',\n      data: {\n        float: nodeStyle.float,\n        alignment: nodeStyle.textAlign\n      }\n    }\n\n  } else if (nodeName === 'hr') {\n\n    return {\n      type: 'atomic',\n      data: {}\n    }\n\n  } else if (nodeStyle.textAlign && blockNames.indexOf(nodeName) > -1) {\n\n    return {\n      type: blockTypes[blockNames.indexOf(nodeName)],\n      data: {\n        textAlign: nodeStyle.textAlign\n      }\n    }\n\n  }\n\n}\n\nexport const getToHTMLConfig = (props) => {\n\n  return {\n    styleToHTML: styleToHTML(props),\n    entityToHTML: entityToHTML,\n    blockToHTML: blockToHTML(props.contentState)\n  }\n\n}\n\nexport const getFromHTMLConfig = (props) => {\n\n  return { \n    htmlToStyle: htmlToStyle(props),\n    htmlToEntity,\n    htmlToBlock \n  }\n\n}"]}