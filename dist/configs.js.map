{"version":3,"sources":["../src/configs.js"],"names":["namedColors","getStyleValue","style","split","defaultUnitExportFn","unit","defaultUnitImportFn","replace","defaultFontFamilies","name","family","getHexColor","color","test","indexOf","rgbArray","convertedColor","length","map","hex","parseInt","x","toString","join","blocks","blockTypes","Object","keys","blockNames","key","convertAtomicBlock","block","contentState","contentBlock","getBlockForKey","entityKey","getEntityAt","entity","getEntity","mediaType","getType","toLowerCase","data","float","alignment","getData","src","url","link","link_target","width","height","meta","imageWrapStyle","styledClassName","textAlign","display","__html","entityToHTML","options","originalText","entityExportFn","entityType","type","customOutput","href","target","styleToHTML","unitExportFn","styleExportFn","textDecoration","backgroundColor","fontSize","lineHeight","letterSpacing","textIndent","fontFamily","fontFamilies","find","item","blockToHTML","blockExportFn","result","blockStyle","blockType","previousBlock","getBlockBefore","nextBlock","getBlockAfter","previousBlockType","nextBlockType","start","end","nest","htmlToStyle","nodeName","node","currentStyle","unitImportFn","newStyle","i","add","toUpperCase","isNaN","styleImportFn","htmlToEntity","createEntity","entityImportFn","customInput","alt","title","id","controls","autoplay","loop","poster","autoPlay","querySelectorAll","getAttribute","parentNode","entityData","classList","contains","embedContent","innerHTML","outerHTML","htmlToBlock","blockImportFn","nodeStyle","getToHTMLConfig","getFromHTMLConfig"],"mappings":"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","file":"configs.js","sourcesContent":["import React from 'react'\n\nexport const namedColors = {\n  \"aliceblue\": \"#f0f8ff\",\n  \"antiquewhite\": \"#faebd7\",\n  \"aqua\": \"#00ffff\",\n  \"aquamarine\": \"#7fffd4\",\n  \"azure\": \"#f0ffff\",\n  \"beige\": \"#f5f5dc\",\n  \"bisque\": \"#ffe4c4\",\n  \"black\": \"#000000\",\n  \"blanchedalmond\": \"#ffebcd\",\n  \"blue\": \"#0000ff\",\n  \"blueviolet\": \"#8a2be2\",\n  \"brown\": \"#a52a2a\",\n  \"burlywood\": \"#deb887\",\n  \"cadetblue\": \"#5f9ea0\",\n  \"chartreuse\": \"#7fff00\",\n  \"chocolate\": \"#d2691e\",\n  \"coral\": \"#ff7f50\",\n  \"cornflowerblue\": \"#6495ed\",\n  \"cornsilk\": \"#fff8dc\",\n  \"crimson\": \"#dc143c\",\n  \"cyan\": \"#00ffff\",\n  \"darkblue\": \"#00008b\",\n  \"darkcyan\": \"#008b8b\",\n  \"darkgoldenrod\": \"#b8860b\",\n  \"darkgray\": \"#a9a9a9\",\n  \"darkgreen\": \"#006400\",\n  \"darkkhaki\": \"#bdb76b\",\n  \"darkmagenta\": \"#8b008b\",\n  \"darkolivegreen\": \"#556b2f\",\n  \"darkorange\": \"#ff8c00\",\n  \"darkorchid\": \"#9932cc\",\n  \"darkred\": \"#8b0000\",\n  \"darksalmon\": \"#e9967a\",\n  \"darkseagreen\": \"#8fbc8f\",\n  \"darkslateblue\": \"#483d8b\",\n  \"darkslategray\": \"#2f4f4f\",\n  \"darkturquoise\": \"#00ced1\",\n  \"darkviolet\": \"#9400d3\",\n  \"deeppink\": \"#ff1493\",\n  \"deepskyblue\": \"#00bfff\",\n  \"dimgray\": \"#696969\",\n  \"dodgerblue\": \"#1e90ff\",\n  \"firebrick\": \"#b22222\",\n  \"floralwhite\": \"#fffaf0\",\n  \"forestgreen\": \"#228b22\",\n  \"fuchsia\": \"#ff00ff\",\n  \"gainsboro\": \"#dcdcdc\",\n  \"ghostwhite\": \"#f8f8ff\",\n  \"gold\": \"#ffd700\",\n  \"goldenrod\": \"#daa520\",\n  \"gray\": \"#808080\",\n  \"green\": \"#008000\",\n  \"greenyellow\": \"#adff2f\",\n  \"honeydew\": \"#f0fff0\",\n  \"hotpink\": \"#ff69b4\",\n  \"indianred \": \"#cd5c5c\",\n  \"indigo\": \"#4b0082\",\n  \"ivory\": \"#fffff0\",\n  \"khaki\": \"#f0e68c\",\n  \"lavender\": \"#e6e6fa\",\n  \"lavenderblush\": \"#fff0f5\",\n  \"lawngreen\": \"#7cfc00\",\n  \"lemonchiffon\": \"#fffacd\",\n  \"lightblue\": \"#add8e6\",\n  \"lightcoral\": \"#f08080\",\n  \"lightcyan\": \"#e0ffff\",\n  \"lightgoldenrodyellow\": \"#fafad2\",\n  \"lightgrey\": \"#d3d3d3\",\n  \"lightgreen\": \"#90ee90\",\n  \"lightpink\": \"#ffb6c1\",\n  \"lightsalmon\": \"#ffa07a\",\n  \"lightseagreen\": \"#20b2aa\",\n  \"lightskyblue\": \"#87cefa\",\n  \"lightslategray\": \"#778899\",\n  \"lightsteelblue\": \"#b0c4de\",\n  \"lightyellow\": \"#ffffe0\",\n  \"lime\": \"#00ff00\",\n  \"limegreen\": \"#32cd32\",\n  \"linen\": \"#faf0e6\",\n  \"magenta\": \"#ff00ff\",\n  \"maroon\": \"#800000\",\n  \"mediumaquamarine\": \"#66cdaa\",\n  \"mediumblue\": \"#0000cd\",\n  \"mediumorchid\": \"#ba55d3\",\n  \"mediumpurple\": \"#9370d8\",\n  \"mediumseagreen\": \"#3cb371\",\n  \"mediumslateblue\": \"#7b68ee\",\n  \"mediumspringgreen\": \"#00fa9a\",\n  \"mediumturquoise\": \"#48d1cc\",\n  \"mediumvioletred\": \"#c71585\",\n  \"midnightblue\": \"#191970\",\n  \"mintcream\": \"#f5fffa\",\n  \"mistyrose\": \"#ffe4e1\",\n  \"moccasin\": \"#ffe4b5\",\n  \"navajowhite\": \"#ffdead\",\n  \"navy\": \"#000080\",\n  \"oldlace\": \"#fdf5e6\",\n  \"olive\": \"#808000\",\n  \"olivedrab\": \"#6b8e23\",\n  \"orange\": \"#ffa500\",\n  \"orangered\": \"#ff4500\",\n  \"orchid\": \"#da70d6\",\n  \"palegoldenrod\": \"#eee8aa\",\n  \"palegreen\": \"#98fb98\",\n  \"paleturquoise\": \"#afeeee\",\n  \"palevioletred\": \"#d87093\",\n  \"papayawhip\": \"#ffefd5\",\n  \"peachpuff\": \"#ffdab9\",\n  \"peru\": \"#cd853f\",\n  \"pink\": \"#ffc0cb\",\n  \"plum\": \"#dda0dd\",\n  \"powderblue\": \"#b0e0e6\",\n  \"purple\": \"#800080\",\n  \"rebeccapurple\": \"#663399\",\n  \"red\": \"#ff0000\",\n  \"rosybrown\": \"#bc8f8f\",\n  \"royalblue\": \"#4169e1\",\n  \"saddlebrown\": \"#8b4513\",\n  \"salmon\": \"#fa8072\",\n  \"sandybrown\": \"#f4a460\",\n  \"seagreen\": \"#2e8b57\",\n  \"seashell\": \"#fff5ee\",\n  \"sienna\": \"#a0522d\",\n  \"silver\": \"#c0c0c0\",\n  \"skyblue\": \"#87ceeb\",\n  \"slateblue\": \"#6a5acd\",\n  \"slategray\": \"#708090\",\n  \"snow\": \"#fffafa\",\n  \"springgreen\": \"#00ff7f\",\n  \"steelblue\": \"#4682b4\",\n  \"tan\": \"#d2b48c\",\n  \"teal\": \"#008080\",\n  \"thistle\": \"#d8bfd8\",\n  \"tomato\": \"#ff6347\",\n  \"turquoise\": \"#40e0d0\",\n  \"violet\": \"#ee82ee\",\n  \"wheat\": \"#f5deb3\",\n  \"white\": \"#ffffff\",\n  \"whitesmoke\": \"#f5f5f5\",\n  \"yellow\": \"#ffff00\",\n  \"yellowgreen\": \"#9acd32\"\n}\n\nconst getStyleValue = style => style.split('-')[1]\nconst defaultUnitExportFn = unit => unit + 'px'\nconst defaultUnitImportFn = unit => unit.replace('px', '')\n\nexport const defaultFontFamilies = [{\n    name: 'Araial',\n    family: 'Arial, Helvetica, sans-serif'\n  }, {\n    name: 'Georgia',\n    family: 'Georgia, serif'\n  }, {\n    name: 'Impact',\n    family: 'Impact, serif'\n  }, {\n    name: 'Monospace',\n    family: '\"Courier New\", Courier, monospace'\n  }, {\n    name: 'Tahoma',\n    family: \"tahoma, arial, 'Hiragino Sans GB', 宋体, sans-serif\"\n}]\n\nexport const getHexColor = (color) => {\n\n  color = color.replace('color:', '').replace(';', '').replace(' ', '')\n\n  if (/^#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})$/.test(color)) {\n    return color\n  } else if (namedColors[color]) {\n    return namedColors[color]\n  } else if (color.indexOf('rgb') === 0) {\n\n    let rgbArray = color.split(',')\n    let convertedColor = rgbArray.length < 3 ? null : '#' + [rgbArray[0], rgbArray[1], rgbArray[2]].map(x => {\n      const hex = parseInt(x.replace(/\\D/g, ''), 10).toString(16)\n      return hex.length === 1 ? '0' + hex : hex\n    }).join('')\n\n    return /^#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})$/.test(convertedColor) ? convertedColor : null\n\n  } else {\n    return null\n  }\n\n}\n\nexport const blocks = {\n  'header-one': 'h1',\n  'header-two': 'h2',\n  'header-three': 'h3',\n  'header-four': 'h4',\n  'header-fiv': 'h5',\n  'header-six': 'h6',\n  'unstyled': 'p',\n  'blockquote': 'blockquote'\n}\n\nconst blockTypes = Object.keys(blocks)\nconst blockNames = blockTypes.map(key => blocks[key])\n\nconst convertAtomicBlock = (block, contentState) => {\n\n  if (!block || !block.key) {\n    return <p></p>\n  }\n\n  const contentBlock = contentState.getBlockForKey(block.key)\n\n  if (!contentBlock) {\n    return <p></p>\n  }\n\n  const entityKey = contentBlock.getEntityAt(0)\n\n  if (!entityKey) {\n    return <p></p>\n  }\n\n  const entity = contentState.getEntity(entityKey)\n  const mediaType = entity.getType().toLowerCase()\n\n  let { float, alignment } = block.data\n  let { src, url, link, link_target, width, height, meta } = entity.getData()\n\n  if (mediaType === 'image') {\n\n    let imageWrapStyle = {}\n    let styledClassName = ''\n\n    if (float) {\n      imageWrapStyle.float = float\n      styledClassName += ' float-' + float\n    } else if (alignment) {\n      imageWrapStyle.textAlign = alignment\n      styledClassName += ' align-' + alignment\n    }\n\n    if (link) {\n      return (\n        <div className={\"media-wrap image-wrap\" + styledClassName} style={imageWrapStyle}>\n          <a style={{display:'inline-block'}} href={link} target={link_target}>\n            <img {...meta} src={src || url} width={width} height={height} style={{width, height}} />\n          </a>\n        </div>\n      )\n    } else {\n      return (\n        <div className={\"media-wrap image-wrap\" + styledClassName} style={imageWrapStyle}>\n          <img {...meta} src={src || url} width={width} height={height} style={{width, height}}/>\n        </div>\n      )\n    }\n\n  } else if (mediaType === 'audio') {\n    return <div className=\"media-wrap audio-wrap\"><audio controls {...meta} src={src || url} /></div>\n  } else if (mediaType === 'video') {\n    return <div className=\"media-wrap video-wrap\"><video controls {...meta} src={src || url} width={width} height={height} /></div>\n  } else if (mediaType === 'embed') {\n    return <div className=\"media-wrap embed-wrap\"><div dangerouslySetInnerHTML={{__html: src || url}}/></div>\n  } else if (mediaType === 'hr') {\n    return <hr></hr>\n  } else {\n    return <p></p>\n  }\n\n}\n\nconst entityToHTML = (options) => (entity, originalText) => {\n\n  const { entityExportFn } = options\n  const entityType = entity.type.toLowerCase()\n\n  if (entityExportFn) {\n    const customOutput = entityExportFn(entity, originalText)\n    if (customOutput) {\n      return customOutput\n    }\n  }\n\n  if (entityType === 'link') {\n    return <a href={entity.data.href} target={entity.data.target}>{originalText}</a>\n  }\n\n}\n\nconst styleToHTML = (options) => (style) => {\n\n  style = style.toLowerCase()\n\n  const unitExportFn = options.unitExportFn || defaultUnitExportFn\n\n  if (options.styleExportFn) {\n    const customOutput = options.styleExportFn(style, options)\n    if (customOutput) {\n      return customOutput\n    }\n  }\n\n  if (style === 'strikethrough') {\n    return <span style={{textDecoration: 'line-through'}}/>\n  } else if (style === 'superscript') {\n    return <sup/>\n  } else if (style === 'subscript') {\n    return <sub/>\n  } else if (style.indexOf('color-') === 0) {\n    return <span style={{color: '#' + getStyleValue(style)}}/>\n  } else if (style.indexOf('bgcolor-') === 0) {\n    return <span style={{backgroundColor: '#' + getStyleValue(style)}}/>\n  } else if (style.indexOf('fontsize-') === 0) {\n    return <span style={{fontSize: unitExportFn(getStyleValue(style), 'font-size', 'html')}}/>\n  } else if (style.indexOf('lineheight-') === 0) {\n    return <span style={{lineHeight: unitExportFn(getStyleValue(style), 'line-height', 'html')}}/> \n  } else if (style.indexOf('letterspacing-') === 0) {\n    return <span style={{letterSpacing: unitExportFn(getStyleValue(style), 'letter-spacing', 'html')}}/>\n  } else if (style.indexOf('textindent-') === 0) {\n    return <span style={{textIndent: unitExportFn(getStyleValue(style), 'text-indent', 'html')}}/>\n  } else if (style.indexOf('fontfamily-') === 0) {\n    let fontFamily = options.fontFamilies.find((item) => item.name.toLowerCase() === getStyleValue(style))\n    if (!fontFamily) return\n    return <span style={{fontFamily: fontFamily.family}}/>\n  }\n\n}\n\nconst blockToHTML = (options) => (block) => {\n\n  const { blockExportFn, contentState } = options\n\n  if (blockExportFn) {\n    const customOutput = blockExportFn(contentState, block)\n    if (customOutput) {\n      return customOutput\n    }\n  }\n\n  let result = null\n  let blockStyle = \"\"\n\n  const blockType = block.type.toLowerCase()\n  const { textAlign } = block.data\n\n  if (textAlign) {\n    blockStyle = ` style=\"text-align:${textAlign};\"`\n  }\n\n  if (blockType === 'atomic') {\n    return convertAtomicBlock(block, contentState)\n  } else if (blockType === 'code-block') {\n\n    const previousBlock = contentState.getBlockBefore(block.key)\n    const nextBlock = contentState.getBlockAfter(block.key)\n    const previousBlockType = previousBlock && previousBlock.getType()\n    const nextBlockType = nextBlock && nextBlock.getType()\n\n    if (previousBlockType !== 'code-block' && nextBlockType !== 'code-block') {\n      return {\n        start: '<pre>',\n        end: '</pre>'\n      }\n    }\n\n    if (previousBlockType !== 'code-block') {\n      return {\n        start: '<pre>',\n        end: '<br/>'\n      }\n    }\n\n    if (nextBlockType !== 'code-block') {\n      return {\n        start: '',\n        end: '</pre>'\n      }\n    }\n\n    return {\n      start: '',\n      end: '<br/>',\n    }\n\n  } else if (blocks[blockType]) {\n    return {\n      start: `<${blocks[blockType]}${blockStyle}>`,\n      end: `</${blocks[blockType]}>`\n    }\n  } else if (blockType === 'unordered-list-item') {\n    return {\n      start: `<li${blockStyle}>`,\n      end: '</li>',\n      nest: <ul/>\n    }\n  } else if (blockType === 'ordered-list-item') {\n    return {\n      start: `<li${blockStyle}>`,\n      end: '</li>',\n      nest: <ol/>\n    }\n  }\n\n}\n\nconst htmlToStyle = (options) => (nodeName, node, currentStyle) => {\n\n  if (!node || !node.style) {\n    return currentStyle\n  }\n\n  const unitImportFn = options.unitImportFn || defaultUnitImportFn\n  let newStyle = currentStyle\n\n  for (let i = 0; i < node.style.length; i++) {\n    if (nodeName === 'span' && node.style[i] === 'color') {\n      let color = getHexColor(node.style.color)\n      newStyle = color ? newStyle.add('COLOR-' + color.replace('#', '').toUpperCase()) : newStyle\n    } else if (nodeName === 'span' && node.style[i] === 'background-color') {\n      let color = getHexColor(node.style.backgroundColor)\n      newStyle = color ? newStyle.add('BGCOLOR-' + color.replace('#', '').toUpperCase()) : newStyle\n    } else if (nodeName === 'span' && node.style[i] === 'font-size') {\n      newStyle = newStyle.add('FONTSIZE-' + unitImportFn(node.style.fontSize, 'font-size'))\n    } else if (nodeName === 'span' && node.style[i] === 'line-height') {\n      newStyle = newStyle.add('LINEHEIGHT-' + unitImportFn(node.style.lineHeight, 'line-height'))\n    } else if (nodeName === 'span' && node.style[i] === 'letter-spacing' && !isNaN(node.style.letterSpacing.replace('px', ''))) {\n      newStyle = newStyle.add('LETTERSPACING-' + unitImportFn(node.style.letterSpacing, 'letter-spacing'))\n    } else if (nodeName === 'span' && node.style[i] === 'text-indent') {\n      newStyle = newStyle.add('TEXTINDENT-' + unitImportFn(node.style.textIndent, 'text-indent'))\n    } else if (nodeName === 'span' && node.style[i] === 'text-decoration' && node.style.textDecoration === 'line-through') {\n      newStyle = newStyle.add('STRIKETHROUGH')\n    } else if (nodeName === 'span' && node.style[i] === 'font-family') {\n      let fontFamily = options.fontFamilies.find((item) => item.family.toLowerCase() === node.style.fontFamily.toLowerCase())\n      if (!fontFamily) continue;\n      newStyle = newStyle.add('FONTFAMILY-' + fontFamily.name.toUpperCase())\n    }\n  }\n\n  if (nodeName === 'sup') {\n    newStyle = newStyle.add('SUPERSCRIPT')\n  } else if (nodeName === 'sub') {\n    newStyle = newStyle.add('SUBSCRIPT')\n  } \n\n  options.styleImportFn && (newStyle = options.styleImportFn(nodeName, node, currentStyle))\n  return newStyle\n\n}\n\nconst htmlToEntity = (options) => (nodeName, node, createEntity) => {\n\n  if (options && options.entityImportFn) {\n    const customInput = options.entityImportFn(nodeName, node, createEntity)\n    if (customInput) {\n      return customInput\n    }\n  }\n\n  const { alt, title, id, controls, autoplay, loop, poster } = node\n  let meta = {}\n\n  id && (meta.id = id)\n  alt && (meta.alt = alt)\n  title && (meta.title = title)\n  controls && (meta.controls = controls)\n  autoplay && (meta.autoPlay = autoplay)\n  loop && (meta.loop = loop)\n  poster && (meta.poster = poster)\n\n  if (nodeName === 'a' && !node.querySelectorAll('img').length) {\n    let { href, target } = node\n    return createEntity('LINK', 'MUTABLE',{ href, target })\n  } else if (nodeName === 'audio') {\n    return createEntity('AUDIO', 'IMMUTABLE',{ src: node.getAttribute('src'), meta }) \n  } else if (nodeName === 'video') {\n    return createEntity('VIDEO', 'IMMUTABLE',{ src: node.getAttribute('src'), meta }) \n  } else if (nodeName === 'img') {\n\n    let parentNode = node.parentNode\n    let entityData = { meta }\n    let { width, height } = node.style\n\n    entityData.src = node.getAttribute('src')\n    width && (entityData.width = width)\n    height && (entityData.height = height)\n\n    if (parentNode.nodeName.toLowerCase() === 'a') {\n      entityData.link = parentNode.href\n      entityData.link_target = parentNode.target\n    }\n\n    return createEntity('IMAGE', 'IMMUTABLE', entityData) \n\n  } else if (nodeName === 'hr') {\n    return createEntity('HR', 'IMMUTABLE', {}) \n  } else if (node.parentNode && node.parentNode.classList.contains('embed-wrap')) {\n\n    const embedContent = node.innerHTML || node.outerHTML\n\n    if (embedContent) {\n      return createEntity('EMBED', 'IMMUTABLE', {\n        src: embedContent\n      })   \n    }\n\n  }\n\n}\n\nconst htmlToBlock = (options) => (nodeName, node) => {\n\n  if (options && options.blockImportFn) {\n    const customInput = options.blockImportFn(nodeName, node)\n    if (customInput) {\n      return customInput\n    }\n  }\n\n  let nodeStyle = node.style || {}\n\n  if (node.classList && node.classList.contains('media-wrap')) {\n\n    return {\n      type: 'atomic',\n      data: {\n        float: nodeStyle.float,\n        alignment: nodeStyle.textAlign\n      }\n    }\n\n  } else if (nodeName === 'img') {\n\n    return {\n      type: 'atomic',\n      data: {\n        float: nodeStyle.float,\n        alignment: nodeStyle.textAlign\n      }\n    }\n\n  } else if (nodeName === 'hr') {\n\n    return {\n      type: 'atomic',\n      data: {}\n    }\n\n  } else if (nodeStyle.textAlign && blockNames.indexOf(nodeName) > -1) {\n\n    return {\n      type: blockTypes[blockNames.indexOf(nodeName)],\n      data: {\n        textAlign: nodeStyle.textAlign\n      }\n    }\n\n  }\n\n}\n\nexport const getToHTMLConfig = (options) => {\n\n  return {\n    styleToHTML: styleToHTML(options),\n    entityToHTML: entityToHTML(options),\n    blockToHTML: blockToHTML(options)\n  }\n\n}\n\nexport const getFromHTMLConfig = (options) => {\n\n  return { \n    htmlToStyle: htmlToStyle(options),\n    htmlToEntity: htmlToEntity(options),\n    htmlToBlock: htmlToBlock(options)\n  }\n\n}"]}